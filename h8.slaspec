define endian=big;

define alignment=2;

define space ram type=ram_space size=3 default;
define space register type=register_space size=1;

define register offset=0x0 size=2 [R0 R1 R2 R3 R4 R5 FP SP PC];

# The SR has 8 flags.
# Taking a cue from x86, define pseudo-registers for each flag
# separately; otherwise decompilation is a mess
define register offset=0x20 size=1 [T I2 I1 I0 N Z V C];

define register offset=0x30 size=1 [CP DP EP TP BR];

define token instruction_1byte(8)
	opcode_8=(0,7)
;

define token instruction_2byte(16)
	opcode_16=(0,3)
	operand_size_16=(4,4)
	imm8_16=(8,15)	
	address_mode_16=(0,3)
	register_16=(5,7)
	opcode_wholeword = (0,15)
	opcode_firstbyte = (0,7)
	immediate_value_byte = (8,15)
	opcode_00_04 = (0,4)
	register_05_07 = (5,7)
	opcode_08_15 = (8,15)
;

define token instruction_3byte(24)
	opcode_24=(0,3)
	operand_size_24=(4,4)
	register_24=(5,7)
	imm16_24=(16,23)
	adisp16_8b=(16,23)
	opcode1_24bit = (0,7)
	opcode2_24b_5b = (8,12)
;


